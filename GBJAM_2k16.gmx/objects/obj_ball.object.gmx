<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball_normal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Variables

movement_state = P_STILL;
spdx = 0;
spdy = 0;
dirx = 0;

max_fall = 3;
vspd = 10;
grav = 0.10;

hspd = 3;
h_amount = 0.01;

minKickDist = 30;

image_speed = 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if(place_meeting(x+sign(spdx), y, obj_solid)) spdx*=-0.8;
if(place_meeting(x, y+1, obj_solid)) spdx = lerp(spdx, 0, 3*h_amount);
else spdx = lerp(spdx, 0, h_amount);

spdy = lerp(spdy, max_fall, grav); 

// Horizontal
repeat (abs(spdx)) {
    if (!place_meeting(x + sign(spdx), y,  obj_solid)) {
        x += sign(spdx);
    }
    else {
        spdx = 0;
        break;
    }
}

// Vertical
repeat (abs(spdy)) {
    if (!place_meeting(x , y + sign(spdy),  obj_solid)) {
        y += sign(spdy);
    }
    else {
        spdy = 0;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ball Kick

if (instance_exists(obj_player) &amp;&amp; (sqrt(sqr((obj_player.x-x)) + sqr((obj_player.y-y))) &lt;=minKickDist)) {
    if (keyboard_check_pressed(ord("X"))) {
        if (keyboard_check(vk_right)) {
            spdx = hspd;
        }
        else if (keyboard_check(vk_left)) {
            spdx = -hspd;
        }
        if (keyboard_check(vk_up)) {
            spdy = -vspd;
        }
        else if (keyboard_check(vk_down)) {
            spdy = vspd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Circle

draw_set_colour(c_green);
draw_circle(x, y, minKickDist-6, true);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
